{"version":3,"sources":["calculation.jsx","components/resultTable.jsx","Main.js","localization/index.js","localization/en.js","localization/cs.js","index.js"],"names":["getResults","goals","length","intervals","periods","filter","i","previousLower","forEach","p","toCombine","interval","idx","index","total","goal","amount","monthStart","month","duration","toPay","map","g","reduce","a","b","payment","monthEnd","Math","max","apply","o","months","combineIntervals","sort","previousMonth","getIntervals","x","indexOf","getPeriods","m","combineGoals","ResultTable","react_default","createElement","i18n","t","_this","this","props","Grid","fluid","Row","key","renderTableRow","Component","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","calcDisabled","isCalcDisabled","name","handleSubmit","bind","assertThisInitialized","style","margin","display","Col","xs","md","FormGroup","controlId","concat","ControlLabel","FormControl","type","placeholder","value","onChange","handleGoalNameChange","Button","onClick","handleRemoveGoal","bsStyle","title","Glyphicon","glyph","setState","s","sidx","attr","evt","newgoals","objectSpread","target","event","disabled","some","isNaN","_this2","xsOffset","PageHeader","Form","handleAddGoal","renderGoalInputs","getCalculateTitle","resultTable","localization","en","translation","goal-add","goal-amount","goal-months","goal-remove","calculation-title","do-calculation","calculation-month","calculation-results","czk","calculate-disabled-title","cs","i18next","init","lng","resources","interpolation","escapeValue","ReactDOM","render","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.fd874da0.chunk.js","sourcesContent":["export function getIntervals(goals) {\n\t// seradim kombinovane cile podle doby trvani\n\tgoals.sort((a, b) => {\n\t\treturn a.months - b.months;\n\t});\n\t// pro kazdy kombinovany cil vytvorim Interval (aka splatkove obdobi)\n\tconst intervals = goals.map((goal, i) => {\n\t\treturn { month: goal.months, previousLower: false };\n\t});\n\n\tintervals.forEach((interval, i) => {\n\t\tconst previousMonth = goals[i - 1] ? goals[i - 1].months : 0;\n\t\tinterval.duration = interval.month - previousMonth;\n\t\tinterval.payment = goals[i].amount / interval.duration;\n\t\tinterval.goal = goals[i];\n\n\t\tif (intervals[i - 1] && (intervals[i - 1].payment < interval.payment)) {\n\t\t\tinterval.previousLower = true;\n\t\t}\n\t\tinterval.index = i;\n\t});\n\treturn intervals;\n}\n\n/**\n * Vrati pole obdobi, na ktera budou splatky vzdy rozdeleny. Tj. takove, ktera maji nizsci splatku nez obdobi predchozi\n * \n * @param {[Object]} goals Pole sloucenych cilu\n * @returns {[Object]} Pole obdobi, ktera budou ve vysledku\n */\nexport function getPeriods(goals) {\n\treturn goals.map(g => g.months).filter((x, i, a) => a.indexOf(x) === i);\n}\n\n// sloucim ty cile, ktere trvaji stejne dlouho. Muzu je brat jako jeden\nexport function combineGoals(goals) {\n\tconst months = getPeriods(goals);\n\tlet goalsCombined = months.map(m => {\n\t\tlet g = {};\n\t\t// dohledam cile, ktere se maji splatit na konci tohoto obdobi\n\t\tconst toPay = goals.filter(g => g.months === m).map(g => g.amount).reduce(function (a, b) { return a + b; });\n\t\tg.amount = toPay;\n\t\tg.months = m;\n\t\treturn g;\n\t});\n\n\treturn goalsCombined;\n}\n\n/**\n * Z mnoziny vsech moznych splatkovych intervalu vytvori novou, ktera muze obsahovat mene intervalu.\n * To se stane pokud:\n * - nasledujici interval ma vetsi splatku, nez ten pred nim\n * Takove jsou slouceny do jednoho. Jejich trvani je souctem vsech po sobe jdoucich intervalu, kde splatka pozdejsiho je vyssi\n * nez splatka predchoziho\n * @param {[Object]} intervals Vsechny splatkove intervaly vytvorene z dob splaceni kombinovaych cilu\n * @returns {[Object]} intervals Vysledne pole splatkovych intervalu, ve kterych se lisi velikost splatky \n */\nexport function combineIntervals(intervals) {\n\tconst periods = intervals.filter(i => !i.previousLower);\n\tperiods.forEach((p, i) => {\n\t\t// zjistit si dalsi periodu, pred kterou se musim zastavit\n\t\t// K A1 mohu sloucit dalsi intervaly (B), pokud jsou splneny vsechny nasledujici podminky\n\t\t// - B nasleduje po A (porovnani indexu)\n\t\t// - B je pred dalsim obdobim, ktere nema vyssi splatku nez jeho predchudce, nebo je poslednim obdobim uplne\n\t\t// - B ma vyssi splatku nez predchozi interval\n\t\tp.toCombine = intervals.filter((interval, idx) => \n\t\t\tinterval.previousLower && interval.index > p.index && ((periods[i + 1] && periods[i + 1].index > interval.index) || !periods[i + 1])\n\t\t);\n\t});\n\n\t// vim, ktere obdobi budu kombinovat do jedne splatky, ted je sectu dohromady a nastavim delku nove vznikleho obdobi\n\t// pro vsechny nastavim sumu splatky a zacatek a konec splaceni\n\tperiods.forEach((p, i) => {\n\t\tp.total = p.goal.amount;\n\t\tp.monthStart = p.month - p.duration + 1;\n\t\tif (p.toCombine && p.toCombine.length > 0) {\n\t\t\t// sectu castku vsech cilu, ktera musi byt zaplacena v techto obdobich, ktera kombinuji\n\t\t\tconst toPay = p.toCombine.map(g => g.goal.amount).reduce(function (a, b) { return a + b; });\n\t\t\t// castku z kombinovanych obdobi prictu k castce obdobi, se kterym je kombinuju\n\t\t\tp.total += toPay; \n\t\t\t// pote mohu spocitat celkovou splatku pro zkombinovana obdobi\n\t\t\tp.duration += p.toCombine.map(g => g.duration).reduce(function (a, b) { return a + b; });\n\t\t\tp.payment = p.total / p.duration;\n\t\t\t// zjistim posledni mesic splaceni tohoto sloucenoho obdobi\n\t\t\tconst monthEnd = Math.max.apply(Math, p.toCombine.map(function (o) { return o.goal.months; }));\n\t\t\tp.monthStart = monthEnd - p.duration + 1;\n\t\t\tp.month = monthEnd;\n\t\t}\n\t});\n\n\treturn periods;\n}\n\nexport function getResults(goals) {\n\tif (!goals || goals.length === 0) {\n\t\treturn null;\n\t}\n\tconst combinedGoals = combineGoals(goals);\n\tconst intervals = getIntervals(combinedGoals);\n\tconst combinedIntervals = combineIntervals(intervals);\n\tconst result = combinedIntervals.map(interval=>{\n\t\tconst i = { monthStart: interval.monthStart, monthEnd: interval.month, payment: interval.payment};\n\t\treturn i;\n\t});\n\t\n\treturn result;\n}\n","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\nimport i18n from 'i18next';\n\nclass ResultTable extends Component {\n\n\trenderTableRow(interval) {\n\t\tif (!interval) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn <div>{interval.monthStart}. - {interval.monthEnd}. {i18n.t('calculation-month')} = {interval.payment} {i18n.t('czk')}</div>;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst intervals = this.props.intervals;\n\n\t\tif (!intervals || intervals.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<Grid fluid>\n\t\t\t\t<h1>{i18n.t('calculation-results')}</h1>\n\t\t\t\t{intervals.map((interval, idx) => {\n\t\t\t\t\treturn <Row key={idx}>\n\t\t\t\t\t\t{this.renderTableRow(interval)}\n\t\t\t\t\t</Row>;\n\t\t\t\t})}\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nexport default ResultTable;\n","import React, { Component } from 'react';\nimport i18n from 'i18next';\nimport { Grid, Glyphicon, Form, FormGroup, ControlLabel, FormControl, Button, Row, Col, PageHeader } from 'react-bootstrap';\nimport { getResults } from './calculation';\nimport ResultTable from './components/resultTable';\n\nclass Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcalcDisabled: this.isCalcDisabled(),\n\t\t\tintervals: [],\n\t\t\tgoals: [{ name: '', amount: 0, months: 0 }]\n\t\t\t//goals: [{ name: '', amount: 500, months: 10 }, { name: '', amount: 1000, months: 20 }]\n\t\t};\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\trenderGoalInputs(goal, idx) {\n\t\treturn (\n\t\t\t<Row key={idx} style={{ 'margin': '0.3em', 'display': 'inline'}}>\n\t\t\t\t<Col xs={5} md={5}>\n\t\t\t\t\t<FormGroup controlId={`name-${idx}`}>\n\t\t\t\t\t\t<ControlLabel>{i18n.t('goal')}</ControlLabel>\n\t\t\t\t\t\t<FormControl type=\"text\" placeholder={i18n.t('goal') + ` #${idx + 1}`} value={goal.name} onChange={this.handleGoalNameChange.bind(this, idx, 'name')} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={3} md={2}>\n\t\t\t\t\t<FormGroup controlId={`amount-${idx}`}>\n\t\t\t\t\t\t<ControlLabel>{i18n.t('goal-amount')}</ControlLabel>\n\t\t\t\t\t\t<FormControl type=\"text\" placeholder=\"1000\" value={goal.amount} onChange={this.handleGoalNameChange.bind(this, idx, 'amount')} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={3} md={2}>\n\t\t\t\t\t<FormGroup controlId={`months-${idx}`}>\n\t\t\t\t\t\t<ControlLabel>{i18n.t('goal-months')}</ControlLabel>\n\t\t\t\t\t\t<FormControl type=\"text\" placeholder=\"12\" value={goal.months} onChange={this.handleGoalNameChange.bind(this, idx, 'months')} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button type=\"button\" onClick={this.handleRemoveGoal.bind(this, idx)} bsStyle=\"danger\" title={i18n.t('goal-remove')}><Glyphicon glyph=\"trash\" /></Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\thandleAddGoal() {\n\t\tthis.setState({\n\t\t\tgoals: this.state.goals.concat([{ name: '', amount: 0, months: 0 }])\n\t\t});\n\t}\n\thandleRemoveGoal(idx) {\n\t\tthis.setState({\n\t\t\tgoals: this.state.goals.filter((s, sidx) => idx !== sidx)\n\t\t});\n\t}\n\thandleGoalNameChange(idx, attr, evt) {\n\t\tconst newgoals = this.state.goals.map((goal, sidx) => {\n\t\t\tif (idx !== sidx) { return goal; }\n\t\t\tswitch (attr) {\n\t\t\t\tcase 'amount':\n\t\t\t\t\treturn { ...goal, amount: evt.target.value };\n\t\t\t\tcase 'months':\n\t\t\t\t\treturn { ...goal, months: evt.target.value };\n\t\t\t\tdefault:\n\t\t\t\t\treturn { ...goal, name: evt.target.value };\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ goals: newgoals, calcDisabled: this.isCalcDisabled() });\n\t}\n\n\thandleSubmit(event) {\n\t\tthis.setState({ intervals: getResults(this.state.goals) });\n\t}\n\n\tisCalcDisabled() {\n\t\tlet disabled = true;\n\t\tif (this.state && this.state.goals && this.state.goals.length) {\n\t\t\tdisabled = this.state.goals.some(g => isNaN(g.amount) || isNaN(g.months)) || this.state.goals.some(g => g.months === 0);\n\t\t}\n\t\treturn disabled;\n\t}\n\n\tgetCalculateTitle() {\n\t\tif (this.isCalcDisabled()) {\n\t\t\treturn i18n.t('calculate-disabled-title');\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Grid >\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={6} xsOffset={3}>\n\t\t\t\t\t\t<PageHeader>{i18n.t('calculation-title')}</PageHeader>\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Button onClick={this.handleAddGoal.bind(this)} bsStyle=\"success\" style={{ 'margin': '0.3em' }}><Glyphicon glyph=\"plus\" /> {i18n.t('goal-add')}</Button>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t{this.state.goals.map((goal, i) => this.renderGoalInputs(goal, i))}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Button onClick={this.handleSubmit} bsStyle=\"primary\" style={{ 'margin': '0.3em' }} disabled={this.isCalcDisabled()} title={this.getCalculateTitle()}>{i18n.t('do-calculation')}</Button>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<ResultTable intervals={this.state.intervals}></ResultTable>\n\t\t\t\t\t</Col>\n\n\t\t\t\t</Row>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nexport default Main;\n","import cs from './cs';\r\nimport en from './en';\r\n\r\nexport default { en, cs };\r\n","export default {\r\n\ttranslation: {\r\n\t\t'goal': 'Goal',\r\n\t\t'goal-add': 'Add goal',\r\n\t\t'goal-amount': 'Amount',\r\n\t\t'goal-months': 'months',\r\n\t\t'goal-remove': 'Remove goal',\r\n\t\t'calculation-title': 'Calculation',\r\n\t\t'do-calculation': 'Calculate',\r\n\t\t'calculation-month': 'month',\r\n\t\t'calculation-results': 'Results',\r\n\t\t'czk': 'CZK',\r\n\t\t'calculate-disabled-title': 'There has to be at least one goal. Amount and Months fields must be numbers. Months must be greater than 0'\r\n\t}\r\n};\r\n","export default {\r\n\ttranslation: {\r\n\t\t'goal': 'Název cíle',\r\n\t\t'goal-add': 'Přidat cíl',\r\n\t\t'goal-amount': 'Částka',\r\n\t\t'goal-months': 'Měsíců',\r\n\t\t'goal-remove': 'Odebrat cíl',\r\n\t\t'calculation-title': 'Výpočet spoření',\r\n\t\t'do-calculation': 'Provést výpočet',\r\n\t\t'calculation-month': 'měsíc',\r\n\t\t'calculation-results': 'Výsledky',\r\n\t\t'czk': 'Kč',\r\n\t\t'calculate-disabled-title': 'Musí být zadán alespoň jeden cíl. Hodnoty v polích Částka a Měsíce musí být čísla. Měsíce musí být větší než nula'\r\n\t}\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport i18next from 'i18next';\nimport localization from './localization';\n\ni18next.init({\n\tlng: 'cs', // zatim jen cs a bez moznosti zmeny\n\tresources: localization,\n\tinterpolation: { escapeValue: false }  // React already does escaping\n});\n\nReactDOM.render(\n\t<Main />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}